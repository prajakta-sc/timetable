/*
 * Main.java
 *
 * Created on October 8, 2007, 4:45 PM
 */

package com.krcl.cc;

/**
 *
 * @author  Prajakta
 */
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.util.*;
import javax.swing.event.*;
import java.sql.*;
import com.krcl.cc.*;

public class TimeTable extends javax.swing.JFrame {
    
    /** Creates new form Main */
    public TimeTable () {
        initComponents ();
//        msg = new Message();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        jDesktopPane1 = new javax.swing.JDesktopPane();
        jmnuMainBar = new javax.swing.JMenuBar();
        mnuReceipt = new javax.swing.JMenu();
        mnitReceiptAdd = new javax.swing.JMenuItem();
        mnitReceiptQuery = new javax.swing.JMenuItem();
        mnuIssue = new javax.swing.JMenu();
        mnitIssueAdd = new javax.swing.JMenuItem();
        mnitIssueQuery = new javax.swing.JMenuItem();
        mnuSale = new javax.swing.JMenu();
        mnitSaleAdd = new javax.swing.JMenuItem();
        mnitSaleQuery = new javax.swing.JMenuItem();
        mnuReturn = new javax.swing.JMenu();
        mnitReturnAdd = new javax.swing.JMenuItem();
        mnitReturnQuery = new javax.swing.JMenuItem();
        mnuLogout = new javax.swing.JMenu();
        mnitCloseAll = new javax.swing.JMenuItem();
        mnitExit = new javax.swing.JMenuItem();

        FormListener formListener = new FormListener();

        getContentPane().setLayout(null);

        setTitle("Welcome to Konkan Railway");
        setExtendedState(4);
        setMaximizedBounds(new java.awt.Rectangle(0, 0, 600, 500));
        addWindowListener(formListener);

        getContentPane().add(jDesktopPane1);
        jDesktopPane1.setBounds(0, 0, 630, 500);

        mnuReceipt.setText("Receipt");
        mnitReceiptAdd.setText("Add");
        mnitReceiptAdd.addActionListener(formListener);

        mnuReceipt.add(mnitReceiptAdd);

        mnitReceiptQuery.setText("Query");
        mnitReceiptQuery.addActionListener(formListener);

        mnuReceipt.add(mnitReceiptQuery);

        jmnuMainBar.add(mnuReceipt);

        mnuIssue.setText("Issue");
        mnitIssueAdd.setText("Add");
        mnitIssueAdd.addActionListener(formListener);

        mnuIssue.add(mnitIssueAdd);

        mnitIssueQuery.setText("Query");
        mnitIssueQuery.addActionListener(formListener);

        mnuIssue.add(mnitIssueQuery);

        jmnuMainBar.add(mnuIssue);

        mnuSale.setText("Sale");
        mnitSaleAdd.setText("Add");
        mnitSaleAdd.addActionListener(formListener);

        mnuSale.add(mnitSaleAdd);

        mnitSaleQuery.setText("Query");
        mnitSaleQuery.addActionListener(formListener);

        mnuSale.add(mnitSaleQuery);

        jmnuMainBar.add(mnuSale);

        mnuReturn.setText(" Return");
        mnitReturnAdd.setText("Add");
        mnitReturnAdd.addActionListener(formListener);

        mnuReturn.add(mnitReturnAdd);

        mnitReturnQuery.setText("Query");
        mnitReturnQuery.addActionListener(formListener);

        mnuReturn.add(mnitReturnQuery);

        jmnuMainBar.add(mnuReturn);

        mnuLogout.setText("Logout");
        mnitCloseAll.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        mnitCloseAll.setText("Close All Windows");
        mnitCloseAll.addActionListener(formListener);

        mnuLogout.add(mnitCloseAll);

        mnitExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        mnitExit.setText("Exit");
        mnitExit.addActionListener(formListener);

        mnuLogout.add(mnitExit);

        jmnuMainBar.add(mnuLogout);

        setJMenuBar(jmnuMainBar);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-600)/2, (screenSize.height-400)/2, 600, 400);
    }

    // Code for dispatching events from components to event handlers.

    private class FormListener implements java.awt.event.ActionListener, java.awt.event.WindowListener {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            if (evt.getSource() == mnitReceiptAdd) {
                TimeTable.this.mnitReceiptAddActionPerformed(evt);
            }
            else if (evt.getSource() == mnitReceiptQuery) {
                TimeTable.this.mnitReceiptQueryActionPerformed(evt);
            }
            else if (evt.getSource() == mnitIssueAdd) {
                TimeTable.this.mnitIssueAddActionPerformed(evt);
            }
            else if (evt.getSource() == mnitIssueQuery) {
                TimeTable.this.mnitIssueQueryActionPerformed(evt);
            }
            else if (evt.getSource() == mnitSaleAdd) {
                TimeTable.this.mnitSaleAddActionPerformed(evt);
            }
            else if (evt.getSource() == mnitSaleQuery) {
                TimeTable.this.mnitSaleQueryActionPerformed(evt);
            }
            else if (evt.getSource() == mnitReturnAdd) {
                TimeTable.this.mnitReturnAddActionPerformed(evt);
            }
            else if (evt.getSource() == mnitReturnQuery) {
                TimeTable.this.mnitReturnQueryActionPerformed(evt);
            }
            else if (evt.getSource() == mnitCloseAll) {
                TimeTable.this.mnitCloseAllActionPerformed(evt);
            }
            else if (evt.getSource() == mnitExit) {
                TimeTable.this.mnitExitActionPerformed(evt);
            }
        }

        public void windowActivated(java.awt.event.WindowEvent evt) {
        }

        public void windowClosed(java.awt.event.WindowEvent evt) {
        }

        public void windowClosing(java.awt.event.WindowEvent evt) {
            if (evt.getSource() == TimeTable.this) {
                TimeTable.this.exitForm(evt);
            }
        }

        public void windowDeactivated(java.awt.event.WindowEvent evt) {
        }

        public void windowDeiconified(java.awt.event.WindowEvent evt) {
        }

        public void windowIconified(java.awt.event.WindowEvent evt) {
        }

        public void windowOpened(java.awt.event.WindowEvent evt) {
        }
    }//GEN-END:initComponents

    private void mnitCloseAllActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitCloseAllActionPerformed
        // TODO add your handling code here:
        if(cur_app == null){
            Message msg = new Message(new javax.swing.JFrame (), true);
            msg.setMessage("There are no open windows.");
            msg.show();
        } else if(cur_app.equals("tissue")) {
            Message msg = new Message(new javax.swing.JFrame (), true);
            msg.setMessage("Closing Issue...");
            msg.show();
            tissue.dispose();
            cur_app = null;
        } else if(cur_app.equals ("treceipt" ) ){
            Message msg = new Message(new javax.swing.JFrame (), true);
            msg.setMessage("Closing Receipt ...");
            msg.show();
            treceipt.dispose ();
            cur_app = null;
        } else if(cur_app.equals ("treqn" )) {
            Message msg = new Message(new javax.swing.JFrame (), true);
            msg.setMessage("Closing Requisition ...");
            msg.show();
            treqn.dispose ();
            cur_app = null;
        } else if(cur_app.equals ("treturn")) {
            Message msg = new Message(new javax.swing.JFrame (), true);
            msg.setMessage("Closing Return ...");
            msg.show();
            treturn.dispose ();
            cur_app = null;
        } else if(cur_app.equals ("tsale" )) {
            Message msg = new Message(new javax.swing.JFrame (), true);
            msg.setMessage("Closing Sale ...");
            msg.show(); 
            tsale.dispose ();
            cur_app = null;
        } else {
            System.out.println("There are no open windows");
        }
    }//GEN-LAST:event_mnitCloseAllActionPerformed

    private void mnitExitActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitExitActionPerformed
        // TODO add your handling code here:
        LogOut out = new LogOut(this, true);
        out.show ();
    }//GEN-LAST:event_mnitExitActionPerformed

    private void mnitReturnQueryActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitReturnQueryActionPerformed
        // TODO add your handling code here:
        this.setMode("Query");
        if(cur_app == null ) {
            treturn = new TimeTableReturnForm ();
            jDesktopPane1.add(treturn);
            treturn.show ();
            cur_app = "treturn";
        } else if(cur_app.equals ("treturn" )) {
            Message msg = new Message(new javax.swing.JFrame (), true);
            msg.setMessage("This program is already running.");
            msg.isCancelRequired (false);
            msg.show();
        } else {
            Message msg = new Message(new javax.swing.JFrame (), true);
            msg.setMessage("Some other program is already running.");
            msg.isCancelRequired (false);
            msg.show();
        } 
    }//GEN-LAST:event_mnitReturnQueryActionPerformed

    private void mnitReceiptQueryActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitReceiptQueryActionPerformed
        // TODO add your handling code here:
        this.setMode("Query");
        if(cur_app == null ) {
            treceipt = new TimeTableReceiptForm ();
            jDesktopPane1.add(treceipt);
            treceipt.show ();
            cur_app = "treceipt";
        } else if(cur_app.equals ("treceipt" )) {
            Message msg = new Message(new javax.swing.JFrame (), true);
            msg.setMessage("This program is already running.");
            msg.isCancelRequired (false);
            msg.show();
        } else {
            System.out.println("Some other program is already running.");
        } 
    }//GEN-LAST:event_mnitReceiptQueryActionPerformed

    private void mnitReceiptAddActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitReceiptAddActionPerformed
        // TODO add your handling code here:
        this.setMode("Add");
        if(cur_app == null ) {
            treceipt = new TimeTableReceiptForm ();
            jDesktopPane1.add(treceipt);
            treceipt.show ();
            cur_app = "treceipt";
        } else if(cur_app.equals ("treceipt" )) {
            Message msg = new Message(new javax.swing.JFrame (), true);
            msg.setMessage("This program is already running.");
            msg.isCancelRequired (false);
            msg.show();
        } else {
            System.out.println("Some other program is already running.");
        } 
    }//GEN-LAST:event_mnitReceiptAddActionPerformed

    private void mnitSaleQueryActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitSaleQueryActionPerformed
        // TODO add your handling code here:
        this.setMode("Query");
        if(cur_app == null ) {
            tsale = new TimeTableSaleForm ();
            jDesktopPane1.add(tsale);
            tsale.show ();
            cur_app = "tsale";
        } else if(cur_app.equals ("tsale" )) {
            Message msg = new Message(new javax.swing.JFrame (), true);
            msg.setMessage("This program is already running.");
            msg.isCancelRequired (false);
            msg.show();
        } else {
            System.out.println("Some other program is already running.");
        } 
    }//GEN-LAST:event_mnitSaleQueryActionPerformed

    private void mnitReturnAddActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitReturnAddActionPerformed
        // TODO add your handling code here:
        this.setMode("Add");
        if(cur_app == null ) {
            treturn = new TimeTableReturnForm ();
            jDesktopPane1.add(treturn);
            treturn.show ();
            cur_app = "treturn";
        } else if(cur_app.equals ("treturn" )) {
            Message msg = new Message(new javax.swing.JFrame (), true);
            msg.setMessage("This program is already running.");
            msg.isCancelRequired (false);
            msg.show();
        } else {
            System.out.println("Some other program is already running.");
        } 
    }//GEN-LAST:event_mnitReturnAddActionPerformed

    private void mnitSaleAddActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitSaleAddActionPerformed
        this.setMode("Add");
        if(cur_app == null ) {
            tsale = new TimeTableSaleForm ();
            jDesktopPane1.add(tsale);
            tsale.show ();
            cur_app = "tsale";
        } else if(cur_app.equals ("tsale" )) {
            Message msg = new Message(new javax.swing.JFrame (), true);
            msg.setMessage("This program is already running.");
            msg.isCancelRequired (false);
            msg.show();
        } else {
            System.out.println("Some other program is already running.");
        } 
    }//GEN-LAST:event_mnitSaleAddActionPerformed

    private void mnitIssueQueryActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitIssueQueryActionPerformed
        this.setMode("Query");
        if(cur_app == null ) {
            tissue = new TimeTableIssueForm ();
            jDesktopPane1.add(tissue);
            tissue.show ();
            cur_app = "tissue";
        } else if(cur_app.equals ("tissue" )) {
            Message msg = new Message(new javax.swing.JFrame (), true);
            msg.setMessage("This program is already running.");
            msg.isCancelRequired (false);
            msg.show();
        } else {
            System.out.println("Some other program is already running.");
        } 
    }//GEN-LAST:event_mnitIssueQueryActionPerformed

    private void mnitIssueAddActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnitIssueAddActionPerformed
        this.setMode("Add");
        if(cur_app == null ) {
            tissue = new TimeTableIssueForm ();
            jDesktopPane1.add(tissue);
            tissue.show ();
            cur_app = "tissue";
        } else if(cur_app.equals ("tissue" )) {
            Message msg = new Message(new javax.swing.JFrame (), true);
            msg.setMessage("This program is already running.");
            msg.isCancelRequired (false);
            msg.show();
        } else {
            System.out.println("Some other program is already running.");
        } 
    }//GEN-LAST:event_mnitIssueAddActionPerformed
    
    /** Exit the Application */
    private void exitForm (java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit (0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main (String args[]) {
        new TimeTable ().show ();
    }
    
    public static String getMode() {
        return mode;
    }
    
    public void setMode(String ttmode) {
        this.mode = ttmode;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JMenuBar jmnuMainBar;
    private javax.swing.JMenuItem mnitCloseAll;
    private javax.swing.JMenuItem mnitExit;
    private javax.swing.JMenuItem mnitIssueAdd;
    private javax.swing.JMenuItem mnitIssueQuery;
    private javax.swing.JMenuItem mnitReceiptAdd;
    private javax.swing.JMenuItem mnitReceiptQuery;
    private javax.swing.JMenuItem mnitReturnAdd;
    private javax.swing.JMenuItem mnitReturnQuery;
    private javax.swing.JMenuItem mnitSaleAdd;
    private javax.swing.JMenuItem mnitSaleQuery;
    private javax.swing.JMenu mnuIssue;
    private javax.swing.JMenu mnuLogout;
    private javax.swing.JMenu mnuReceipt;
    private javax.swing.JMenu mnuReturn;
    private javax.swing.JMenu mnuSale;
    // End of variables declaration//GEN-END:variables
    private static String mode;    
    public static String cur_app = null;
    
    TimeTableIssueForm tissue = null;
    TimeTableReceiptForm treceipt = null;
    TimeTableRequisitionForm treqn = null;
    TimeTableReturnForm treturn = null;
    TimeTableSaleForm tsale = null;
}
