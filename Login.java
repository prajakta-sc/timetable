/*
 * Login.java
 *
 * Created on October 3, 2007, 4:02 PM
 */

package com.krcl.cc;

/**
 *
 * @author  Prajakta
 */
import java.sql.*;
import java.io.*;
import com.krcl.cc.*;

public class Login extends javax.swing.JFrame {
    
    /** Creates new form Login */
    public Login () {
        initComponents ();
        try {
            Class.forName ("sun.jdbc.odbc.JdbcOdbcDriver");
            con = DriverManager.getConnection ("jdbc:odbc:timetable");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jTextField1 = new javax.swing.JTextField();
        LoginPanel = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblPassword = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        lblHiddenMessage = new javax.swing.JLabel();
        lblFirstNo = new javax.swing.JLabel();
        lblLastNo = new javax.swing.JLabel();
        txtFirstNo = new javax.swing.JTextField();
        txtLastNo = new javax.swing.JTextField();
        lblImprest = new javax.swing.JLabel();
        txtImprest = new javax.swing.JTextField();

        jTextField1.setText("jTextField1");

        getContentPane().setLayout(null);

        setTitle("Login Timetable Module");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        LoginPanel.setLayout(new java.awt.GridBagLayout());

        LoginPanel.setAutoscrolls(true);
        lblName.setText("Name :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        LoginPanel.add(lblName, gridBagConstraints);

        txtName.setColumns(20);
        txtName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNameFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        LoginPanel.add(txtName, gridBagConstraints);

        lblPassword.setText("Password :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        LoginPanel.add(lblPassword, gridBagConstraints);

        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPasswordFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        LoginPanel.add(txtPassword, gridBagConstraints);

        btnLogin.setText("Login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.insets = new java.awt.Insets(8, 8, 8, 8);
        LoginPanel.add(btnLogin, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        LoginPanel.add(lblHiddenMessage, gridBagConstraints);

        lblFirstNo.setText("First No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        LoginPanel.add(lblFirstNo, gridBagConstraints);

        lblLastNo.setText("Last No");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        LoginPanel.add(lblLastNo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        LoginPanel.add(txtFirstNo, gridBagConstraints);

        txtLastNo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLastNoFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        LoginPanel.add(txtLastNo, gridBagConstraints);

        lblImprest.setText("Imprest Cash");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        LoginPanel.add(lblImprest, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        LoginPanel.add(txtImprest, gridBagConstraints);

        getContentPane().add(LoginPanel);
        LoginPanel.setBounds(0, 0, 357, 269);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-387)/2, (screenSize.height-311)/2, 387, 311);
    }//GEN-END:initComponents

    private void txtLastNoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLastNoFocusLost
        // TODO add your handling code here:
        try {
            String sql = "SELECT imprest_cash FROM cctk_timetable_issue WHERE current_no = " + txtFirstNo.getText() + 
                    " AND last_no = " + txtLastNo.getText() + "AND status = 'I'";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            if(rs.next()) {
                txtImprest.setText("" + rs.getDouble(1));
            } else {
                Message msg = new Message(new javax.swing.JFrame(), true);
                msg.setMessage("Invalid Combination of first & last nos.");
                msg.isCancelRequired(false);
                msg.show();                
//                javax.swing.JOptionPane.showInternalMessageDialog(this, "Invalid combination", 
//                    "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
                txtFirstNo.requestFocus();
            }
        } catch (SQLException se) {
            se.printStackTrace();
        }
    }//GEN-LAST:event_txtLastNoFocusLost

    private void txtNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusLost
        // TODO add your handling code here:
        this.setUserName (txtName.getText ());
    }//GEN-LAST:event_txtNameFocusLost

    private void txtPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusLost
        // TODO add your handling code here:
        this.setPassword (String.valueOf (txtPassword.getPassword ()));
        try {
            pst = con.prepareStatement ("SELECT cctk_timetable_issue.last_no FROM cctk_timetable_issue " +
                        "WHERE user_id = ? ");
            pst.setString  (1, userName);
            rs = pst.executeQuery();
            rs.next();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtPasswordFocusLost

    private void btnLoginActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        this.connectEmployee ();
    }//GEN-LAST:event_btnLoginActionPerformed
    
    /** Exit the Application */
    private void exitForm (java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit (0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main (String args[]) {
        new Login ().show ();
    }
    
    /**
     * Getter for property userName.
     * @return Value of property userName.
     */
    public String getUserName () {
        return userName;
    }    
   
    /**
     * Setter for property userName.
     * @param userName New value of property userName.
     */
    public void setUserName (java.lang.String userName) {
        this.userName = userName;
    }    
    
    /**
     * Getter for property password.
     * @return Value of property password.
     */
    public java.lang.String getPassword () {
        return password;
    }
    
    /**
     * Setter for property password.
     * @param password New value of property password.
     */
    public void setPassword (java.lang.String password) {
        this.password = password;
    }
    
    /**
     * Getter for property validUser.
     * @return Value of property validUser.
     */
    public boolean isValidUser () {
        String user = null;
        String passwd = null;
        try {
            pst = con.prepareStatement ("select * from pmm_employee where user_id = ? and password = ?");
            pst.setString(1, txtName.getText ());
            pst.setString(2, String.valueOf (txtPassword.getPassword ()));
            rs = pst.executeQuery ();
            while(rs.next()) {
                emp_no = rs.getInt (1);
                user = rs.getString(2);
                emp_short_name = rs.getString (3);
                passwd = rs.getString(4);
                i++;
            }
            if((this.userName.equals (user)) && (this.password.equals (passwd) )){
                validUser = true;
            } else {
                validUser = false;
            }
        } catch (Exception se) {
            se.printStackTrace ();
        } finally {
            try {
                rs.close();
                pst.close();
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
        return validUser;
    }
    
    /**
     * Setter for property validUser.
     * @param validUser New value of property validUser.
     */
    public void setValidUser (boolean validUser) {
        this.validUser = validUser;
    }
    
    public void connectEmployee () {
            if(isValidUser()){
                userValid();
            } else {
                userInvalid();
            }
    }
    
    public void userValid() {
        try {
            int last_no = getLastNo();
            if(last_no != -1) {
                pst = null;
                pst = con.prepareStatement ("INSERT INTO cctk_login values (?,?,?,?,?,?,?,?,?,?,?,?) ",
                    ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
                pst.setString(1, "RN");
                pst.setString(2, txtName.getText ());
                java.util.Date today_dt = new java.util.Date();
                java.sql.Date today_date = new java.sql.Date(today_dt.getTime ());
                pst.setDate (3, today_date);
                java.sql.Time today_time = new java.sql.Time(today_dt.getTime ());
                pst.setTime (4, today_time);
                
                pst.setInt (5, Integer.parseInt (txtFirstNo.getText ()));
                pst.setInt (6, Integer.parseInt (txtFirstNo.getText ()));
                pst.setInt (7, Integer.parseInt (txtLastNo.getText ()));
                pst.setNull (8, java.sql.Types.DATE);
                pst.setNull (9, java.sql.Types.TIME);
                pst.setString (10, "O");
                pst.setDouble (11, Double.parseDouble (txtImprest.getText ()));
                pst.setDouble (12, 0);

                int no_rows = pst.executeUpdate ();
                
                updateIssue();
                TimeTable timetable = new TimeTable();
                timetable.show ();
                this.dispose ();
            }
            else {
                Message msg = new Message(new javax.swing.JFrame(), true);
                msg.setMessage("This first no is not issued to you.");
                msg.isCancelRequired(false);
                msg.show();
            }
        } catch (Exception se) {
            se.printStackTrace ();
        } finally {
            try {
                pst.close();
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }
    
    public void updateIssue() {
        try {
            pst = null;
            pst = con.prepareStatement ("UPDATE cctk_timetable_issue SET status = 'O' " +
                        "WHERE user_id = ? AND first_no = ? and last_no = ? ");
            pst.setString  (1, userName);
            pst.setInt (2, Integer.parseInt (txtFirstNo.getText ()));
            pst.setInt (3, Integer.parseInt (txtLastNo.getText ()));
            pst.executeUpdate();
        } catch (Exception se) {
            se.printStackTrace ();
        }finally {
            try {
                pst.close();
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
    }
    public void userInvalid() {
        this.setUserName ("");
        this.setPassword ("");
        txtName.setText ("");
        txtPassword.setText ("");
        Message msg = new Message(new javax.swing.JFrame(), true);
        msg.setMessage("Invalid user. Please login again.");
        msg.isCancelRequired(false);
        msg.show();
        lblHiddenMessage.setText ("Invalid user. Please login again");
        this.txtName.requestFocus ();
    }
    
    public int getLastNo() {
        int last_no = 0;
        try {
            pst = null;
            pst = con.prepareStatement ("SELECT cctk_timetable_issue.last_no FROM cctk_timetable_issue " +
                        "WHERE user_id = ? AND first_no = ? ");
            pst.setString  (1, userName);
            pst.setInt (2, Integer.parseInt (txtFirstNo.getText ()));
            rs = pst.executeQuery ();
            if(rs.next ()) {
                last_no = rs.getInt (1);
                txtLastNo.setText (String.valueOf (last_no));
            } else {
                last_no = -1;
                txtFirstNo.setText("");
                txtLastNo.setText("");
                txtImprest.setText("");
                txtFirstNo.requestFocus();
            }
        } catch (Exception se) {
            last_no = -1;
            se.printStackTrace ();
        }finally {
            try {
                rs.close();
                pst.close();
            } catch (SQLException se) {
                se.printStackTrace();
            }
        }
        return last_no;
    }
    
    protected static String emp_short_name = null;
    protected static int emp_no = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JButton btnLogin;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lblFirstNo;
    private javax.swing.JLabel lblHiddenMessage;
    private javax.swing.JLabel lblImprest;
    private javax.swing.JLabel lblLastNo;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JTextField txtFirstNo;
    private javax.swing.JTextField txtImprest;
    private javax.swing.JTextField txtLastNo;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    // End of variables declaration//GEN-END:variables

    protected static String userName;    
    
    protected String password;
    
    private boolean validUser = false;
    
    private java.sql.Connection con = null;
    
    private java.sql.PreparedStatement pst = null;
    
    private java.sql.ResultSet rs = null;
    
    int i =0;
    String s;
}
